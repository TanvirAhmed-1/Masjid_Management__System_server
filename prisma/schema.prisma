// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
enum RoleType {
  SUPER_ADMIN
  ADMIN
  USER
  MEMBER
}

enum GenderType {
   MALE
  FEMALE
  OTHERS
}

model User {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String     @unique
  password   String
  address    String
   role      RoleType   @default(USER)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  gender      GenderType
  ramadanyear RamadanYear[]
  ifteriist   IfterList[]
  ifikaflist   IfikafList[]
  @@map("user")
}

model RamadanYear {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  ramadanYear  String
  titleName    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Ifikaflist   IfikafList[]
  doners       IfterList[]
  userId       String @db.ObjectId
  user          User @relation(fields: [userId],references: [id])
  @@map("ramadanyear")
  @@index([userId])
}

model IfterList {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  ramadanyearId String?   @db.ObjectId
  ramadanyear   RamadanYear? @relation(fields: [ramadanyearId], references: [id])
  userId        String   @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])
  doners        Doner[]  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("ifterlist")
  @@index([ramadanyearId])
  @@index([userId])
}

model Doner {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  serialNumber String
  name         String
  iftarDate    DateTime
  dayName      String
  ifterListId  String     @db.ObjectId
  ifterList    IfterList  @relation(fields: [ifterListId], references: [id])

  @@map("doners")
  @@index([ifterListId])
}



model IfikafList {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  fromDate     DateTime?    
  toDate       DateTime?
  ramadanId    String       @db.ObjectId
  userId       String       @db.ObjectId

  ramadanYear  RamadanYear  @relation(fields: [ramadanId], references: [id]) // âœ… fixed
  user         User          @relation(fields: [userId], references: [id])

  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@map("ifikaflist")
  @@index([userId,ramadanId])
}
